<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.fx-world</groupId>
	<artifactId>basel-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.0.RELEASE</version>
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<eclipselink.version>2.6.0</eclipselink.version>
	</properties>

	<repositories>
    	<repository>
   			<id>vaadin-addons</id>
   			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>   
    </repositories>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		
		<!-- Development -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Management services, like health and so on -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Database stuff -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-entitymanager</artifactId>					
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.eclipse.persistence</groupId>
			<artifactId>org.eclipse.persistence.jpa</artifactId>
			<version>${eclipselink.version}</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
		</dependency>

		<!-- Vaadin UI -->
		<dependency>
    		<groupId>com.vaadin</groupId>
    		<artifactId>vaadin-spring-boot-starter</artifactId>
    		<version>1.0.0</version>
		</dependency>
		<dependency>
   			<groupId>org.vaadin</groupId>
   			<artifactId>viritin</artifactId>
   			<version>1.57</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<dependencyManagement>
	    <dependencies>
	    	<!-- This removes an ugly bug in grids -->
	        <dependency>
	            <groupId>com.vaadin</groupId>
	            <artifactId>vaadin-bom</artifactId>
	            <version>7.6.4</version>
	            <type>pom</type>
	            <scope>import</scope>
	        </dependency>
	    </dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	
	<profiles>
		<profile>

			<!--
			Sets up the build to run the EclipseLink Maven plugin at compile time and instrument
			domain types. This will prevent the need for load-time weaving when running the app.
			-->

			<id>static-weaving</id>

			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<build>
				<plugins>

					<!-- Static weaver for EclipseLink -->
					<plugin>
						<groupId>com.ethlo.persistence.tools</groupId>
						<artifactId>eclipselink-maven-plugin</artifactId>
						<version>2.x</version>
						<executions>
							<execution>
								<phase>process-classes</phase>
								<goals>
									<goal>weave</goal>
								</goals>
							</execution>
						</executions>

						<dependencies>
							<dependency>
								<groupId>org.eclipse.persistence</groupId>
								<artifactId>org.eclipse.persistence.jpa</artifactId>
								<version>${eclipselink.version}</version>
							</dependency>
						</dependencies>

					</plugin>
				</plugins>
			</build>

			<repositories>
				<repository>
					<id>com.ethlo.eclipselink.tools</id>
					<url>http://ethlo.com/maven</url>
				</repository>
			</repositories>

			<pluginRepositories>
				<pluginRepository>
					<id>com.ethlo.eclipselink.tools</id>
					<url>http://ethlo.com/maven</url>
				</pluginRepository>
			</pluginRepositories>

		</profile>

		<profile>

			<!--
			Sets up the build to use load-time weaving by configuring the Surefire and Boot
			plugins to run with Spring's instrumentation agent. They will automatically pick
			up the EclipseLink weaver and instrument domain types at load time.
			-->

			<id>load-time-weaving</id>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>org.springframework</groupId>
								<artifactId>spring-instrument</artifactId>
								<version>${spring.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<argLine>-javaagent:${settings.localRepository}/org/springframework/spring-instrument/${spring.version}/spring-instrument-${spring.version}.jar</argLine>
						</configuration>
					</plugin>
					<plugin>

						<!--
						Not strictly required by the project but needed if you actually want to
						run the application.
						-->

						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>org.springframework</groupId>
								<artifactId>spring-instrument</artifactId>
								<version>${spring.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<agent>${settings.localRepository}/org/springframework/spring-instrument/${spring.version}/spring-instrument-${spring.version}.jar</agent>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
	
</project>